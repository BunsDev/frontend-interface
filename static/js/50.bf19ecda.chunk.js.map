{"version":3,"sources":["components/CurrencyDropdown/styleds.tsx","components/CurrencyDropdown/CurrencyDropdown.tsx","components/CurrencyDropdown/index.tsx","assets/images/local_gas_station_outlined.svg","components/GasIndicator/index.tsx","components/GasIndicator/GasIndicator.tsx","../node_modules/react-bootstrap-icons/dist/icons/moon-fill.js","../node_modules/react-bootstrap-icons/dist/icons/sun-fill.js","components/ThemeToggle/ThemeToggle.tsx","components/ThemeToggle/index.tsx","pages/Settings/index.tsx","pages/Settings/Settings.tsx"],"names":["CurrencyLogo","styled","Img","PureCurrencyDropdown","currencies","selectedCurrency","onSelectCurrency","Dropdown","Toggle","variant","className","src","image","alt","Menu","Object","keys","map","currency","Item","onClick","active","CurrencyDropdown","id","alert","GasIndicator","gas","Button","GasStationOutlined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","MoonFill","forwardRef","_ref","ref","color","size","rest","React","createElement","xmlns","viewBox","width","height","fill","d","propTypes","PropTypes","string","oneOfType","number","defaultProps","SunFill","PureThemeToggle","onChange","checked","ThemeToggle","useDarkModeManager","darkMode","toggleDarkMode","PureSettings","t","useTranslation","Page","title"],"mappings":"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","file":"static/js/50.bf19ecda.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport Img from \"../UI/Img\";\n\nexport const CurrencyLogo = styled(Img)`\n\tborder-radius: 50%;\n\theight: 1.5rem;\n\tmin-width: 1.5rem;\n\twidth: 1.5rem;\n`;\n","import { Dropdown } from \"react-bootstrap\";\nimport * as Styled from \"./styleds\";\n\nexport interface PureCurrencyDropdownProps {\n\tcurrencies: any;\n\tselectedCurrency: any;\n\tonSelectCurrency?: (T: any) => void;\n}\n\nexport const PureCurrencyDropdown = ({ currencies, selectedCurrency, onSelectCurrency }: PureCurrencyDropdownProps) => {\n\treturn (\n\t\t<Dropdown>\n\t\t\t<Dropdown.Toggle variant=\"white\" className=\"border-light\">\n\t\t\t\t<Styled.CurrencyLogo src={currencies[selectedCurrency].image} alt={selectedCurrency} />\n\t\t\t\t<span className=\"mx-2 text-muted\">{selectedCurrency}</span>\n\t\t\t</Dropdown.Toggle>\n\n\t\t\t<Dropdown.Menu>\n\t\t\t\t{Object.keys(currencies).map((currency) => (\n\t\t\t\t\t<Dropdown.Item\n\t\t\t\t\t\tonClick={onSelectCurrency}\n\t\t\t\t\t\tkey={`currency-${currency}`}\n\t\t\t\t\t\tactive={currency === selectedCurrency}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Styled.CurrencyLogo src={currencies[currency].image} alt={currency} />\n\t\t\t\t\t\t<span className=\"ms-2\">{currency}</span>\n\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t))}\n\t\t\t</Dropdown.Menu>\n\t\t</Dropdown>\n\t);\n};\n","// import { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { useTranslation } from \"react-i18next\";\n\n// import { AppState } from \"../../state\";\nimport { currencies } from \"../../constants/currencies\";\n// import * as actions from \"../../state/currency/actions\";\nimport { PureCurrencyDropdown } from \"./CurrencyDropdown\";\n\nconst CurrencyDropdown = () => {\n\t// @ts-ignore\n\t// const selectedCurrency = useSelector((state: AppState) => state.currency.selected);\n\tconst selectedCurrency = \"BTC\";\n\t// const { i18n } = useTranslation();\n\t// const dispatch = useDispatch();\n\n\t// const selectDestinationCurrency = (id: any) => {\n\t// \tdispatch(actions.fetchCurrencies(id));\n\t// \ti18n.changeLanguage(currencies[id].lng);\n\t// };\n\tconst selectDestinationCurrency = (id: any) => {\n\t\talert(id);\n\t};\n\n\t// useEffect(() => {\n\t// \tdispatch(actions.fetchCurrencies(selectedCurrency));\n\t// }, [selectedCurrency, dispatch]);\n\n\treturn (\n\t\t<PureCurrencyDropdown\n\t\t\tcurrencies={currencies}\n\t\t\tonSelectCurrency={selectDestinationCurrency}\n\t\t\tselectedCurrency={selectedCurrency}\n\t\t/>\n\t);\n};\n\nexport default CurrencyDropdown;\n","export default __webpack_public_path__ + \"static/media/local_gas_station_outlined.f8352ae9.svg\";","import { GasIndicator } from \"./GasIndicator\";\nexport default GasIndicator;\n","import { Button } from \"react-bootstrap\";\nimport SVG from \"react-inlinesvg\";\nimport GasStationOutlined from \"../../assets/images/local_gas_station_outlined.svg\";\n\nexport interface GasIndicatorProps {\n\tgas?: string | number;\n\tonClick?: () => void;\n}\n\nexport const GasIndicator = ({ gas = 0, onClick }: GasIndicatorProps) => {\n\treturn (\n\t\t<Button\n\t\t\tvariant=\"light\"\n\t\t\tonClick={onClick}\n\t\t\tclassName=\"d-inline-flex gap-2 flex-nowrap align-items-center text-success fw-bold\"\n\t\t>\n\t\t\t<SVG src={GasStationOutlined} />\n\t\t\t<span>{gas}</span>\n\t\t</Button>\n\t);\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar MoonFill = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z\"\n  }));\n});\nMoonFill.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nMoonFill.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default MoonFill;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar SunFill = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\"\n  }));\n});\nSunFill.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSunFill.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default SunFill;","import { Button } from \"react-bootstrap\";\nimport { MoonFill, SunFill } from \"react-bootstrap-icons\";\n\nexport interface PureThemeToggleProps {\n\tonChange?: () => void;\n\tchecked?: boolean;\n}\n\nexport const PureThemeToggle = ({ onChange, checked = false }: PureThemeToggleProps) => {\n\treturn (\n\t\t<Button\n\t\t\tonClick={onChange}\n\t\t\tvariant={checked ? \"dark\" : \"light\"}\n\t\t\tclassName={checked ? \"text-white\" : \"text-warning\"}\n\t\t>\n\t\t\t{checked ? <MoonFill size={20} /> : <SunFill size={20} />}\n\t\t</Button>\n\t);\n};\n","import { PureThemeToggle } from \"./ThemeToggle\";\nimport { useDarkModeManager } from \"../../state/user/hooks\";\n\nconst ThemeToggle = () => {\n\tconst [darkMode, toggleDarkMode] = useDarkModeManager();\n\n\treturn <PureThemeToggle onChange={toggleDarkMode} checked={darkMode} />;\n};\n\nexport default ThemeToggle;\n","import { PureSettings } from \"./Settings\";\nexport default PureSettings;\n","import { useTranslation } from \"react-i18next\";\nimport Page from \"../../components/Page\";\nimport CurrencyDropdown from \"../../components/CurrencyDropdown\";\nimport GasIndicator from \"../../components/GasIndicator\";\n// import GasPricesDropdown from \"../../components/GasPricesDropdown\";\nimport ThemeToggle from \"../../components/ThemeToggle\";\n\nexport const PureSettings = () => {\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<Page title={t(\"settings\")}>\n\t\t\t<p className=\"mt-3 mb-2\">Set your preferred transaction speed.</p>\n\t\t\t<GasIndicator gas=\"45\" />\n\t\t\t{/* <GasPricesDropdown /> */}\n\t\t\t<p className=\"mt-3 mb-2\">Toggle between light and dark themes.</p>\n\t\t\t<ThemeToggle />\n\t\t\t<p className=\"mt-3 mb-2\">Set the displayed currency format.</p>\n\t\t\t<CurrencyDropdown />\n\t\t</Page>\n\t);\n};\n"],"sourceRoot":""}